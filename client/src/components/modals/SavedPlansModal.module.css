/* src/components/modals/SavedPlansModal.module.css */

.modalOverlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: var(--overlay-background); /* Use variable */
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
}

.modalContent {
  background-color: var(--background-secondary); /* Use variable */
  padding: 1.5rem;
  border-radius: 8px;
  box-shadow: var(--shadow-elevation-high); /* Use variable */
  max-height: 80vh; /* Limit height */
  display: flex;
  flex-direction: column;
}

.modalHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 20px;
  padding-bottom: 15px; /* Padding below header */
  border: none; /* Explicitly no border for header */
}

/* Renamed from modalTitle in previous state? Use h2 directly */
.modalHeader h2 {
  margin: 0;
  color: var(--text-primary); /* Use variable */
  font-size: 1.3rem;
}

.closeButton {
  background: none;
  border: none;
  font-size: 1.8rem; /* Larger close icon */
  cursor: pointer;
  color: var(--text-tertiary); /* Use variable */
  padding: 0 5px; /* Padding for easier clicking */
  line-height: 1;
}

.closeButton:hover {
  color: var(--text-primary); /* Use variable */
}

.loadingState,
.errorState {
  text-align: center;
  padding: 40px 20px; /* More padding */
  color: var(--text-tertiary); /* Use variable */
  font-style: italic;
  font-size: 1.1em;
}

.errorState {
  color: var(--color-danger); /* Use variable */
  font-style: normal;
  font-weight: 500; /* Less bold */
}

/* Assuming the TSX uses plansList or ul directly - .versionList used below */

.plansListContainer {
  overflow-y: auto; /* Enable scroll if content overflows */
  margin-top: 1rem;
  flex-grow: 1; /* Allow container to take remaining space */
}

.goalGroup {
  margin-bottom: 1rem;
  border-bottom: 1px solid var(--border-color-light); /* Use variable */
  padding-bottom: 0.5rem; /* Reduced padding */
}

.goalGroup:last-child {
  border-bottom: none;
  margin-bottom: 0;
}

.goalGroupHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  cursor: pointer; /* Indicate it's clickable */
  padding: 0.5rem 0; /* Add some padding */
  transition: background-color 0.2s ease; /* Subtle hover effect */
}

/* Optional: Add header hover */
/* .goalGroupHeader:hover {
  background-color: var(--background-hover-light);
} */

.goalTitle {
  margin: 0;
  font-size: 1.1rem;
  font-weight: 600; /* Slightly bolder title */
  flex-grow: 1; /* Allow title to take available space */
  margin-right: 1rem; /* Space before button */
  color: var(--text-primary); /* Use variable */
}

.goalHeaderButtons {
  display: flex;
  align-items: center;
  gap: 0.5rem; /* Space between buttons */
  flex-shrink: 0; /* Prevent container from shrinking */
}

.toggleButton {
  background: none;
  border: 1px solid var(--border-color); /* Use variable */
  color: var(--text-secondary); /* Use variable */
  cursor: pointer;
  padding: 0.1rem 0.5rem;
  font-size: 1.2rem; /* Make +/- bigger */
  line-height: 1;
  border-radius: 4px;
  min-width: 28px; /* Ensure minimum size */
  transition: background-color 0.2s ease, border-color 0.2s ease;
  flex-shrink: 0; /* Prevent button from shrinking */
}

.toggleButton:hover {
  background-color: var(--background-tertiary); /* Use variable */
  border-color: var(--border-color); /* Keep standard border on hover */
}

.deleteAllButton {
  /* Inherits from .deleteButton for base style, can override padding/size here */
  padding: 0.2rem 0.6rem; /* Slightly different padding */
  font-size: 0.9rem;
  margin-right: 0.2rem; /* Small space before collapse button */
}

.versionList {
  list-style: none; /* Remove default bullet points */
  padding-left: 1rem; /* Indent the versions */
  margin-top: 0.5rem;
  margin-bottom: 0;
  /* Animation handled by conditional rendering, could add transition if needed */
}

.planItem {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 15px;
  margin-bottom: 12px; /* Space between items */
  border: 1px solid var(--border-color-light); /* Use variable */
  border-radius: 6px;
  transition: background-color 0.2s ease, box-shadow 0.2s ease;
}

.planItem:hover {
  background-color: var(--background-hover-light); /* Use variable */
  box-shadow: var(--shadow-elevation-low); /* Use variable */
}

.planDetails {
  flex-grow: 1;
  margin-right: 1rem; /* Space between details and buttons */
  font-size: 0.9rem;
  color: var(--text-secondary); /* Use variable */
}

.planDetails p {
  margin: 0 0 4px 0;
  font-weight: 500;
  color: var(--text-primary); /* Use variable */
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis; /* Add ellipsis for long goals */
}

.planDetails span {
  display: block; /* Ensure timestamp is on its own line if needed */
  font-size: 0.8em;
  color: var(--text-tertiary); /* Use variable */
  font-style: italic; /* Italicize the date */
}

.planActions {
  display: flex;
  align-items: center; /* Align buttons vertically */
  gap: 8px; /* Space between buttons */
  flex-shrink: 0;
  margin-left: 0.5rem;
}

.loadButton { /* Separate load button style */
  background-color: var(--accent-color); /* Use variable */
  color: var(--button-text-color); /* Use variable */
  border: none;
  margin-right: 8px; /* Keep space between buttons */
  padding: 6px 12px;
  border-radius: 4px;
  cursor: pointer;
  font-size: 0.9rem;
  transition: background-color 0.2s ease, opacity 0.2s ease;
  font-weight: 500;
}

.loadButton:hover {
  background-color: var(--accent-color-dark); /* Use variable */
  opacity: 0.9;
}

.deleteButton { /* Base delete button style */
  padding: 6px 12px;
  border-radius: 4px;
  cursor: pointer;
  background-color: var(--color-danger); /* Use variable */
  color: var(--button-text-color); /* Use variable */
  border: 1px solid var(--color-danger); /* Use variable for border too */
  transition: background-color 0.2s ease, border-color 0.2s ease, opacity 0.2s ease;
  font-size: 0.9rem; /* Ensure consistent font size */
  font-weight: 500;
}

.deleteButton:hover { /* Hover for delete */
  background-color: var(--color-danger-hover); /* Use variable */
  border-color: var(--color-danger-hover); /* Use variable */
  opacity: 0.9;
}

/* Combined disabled styles */
.loadButton:disabled,
.deleteButton:disabled,
.toggleButton:disabled {
  opacity: 0.5;
  cursor: not-allowed;
  background-color: var(--button-disabled-background); /* Use variable */
  color: var(--button-disabled-text); /* Use variable for text color */
  border: none; /* Remove border for disabled state */
}

/* Ensure .loadingState and .errorState (which were duplicated) use variables */
.loadingState, /* Style already defined above */
.errorState { /* Style already defined above */
  text-align: center;
  padding: 1rem;
  /* color: var(--text-tertiary); Use specific color from definition above */
}

/* Error state specific color is already set */
